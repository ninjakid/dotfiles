# Global variable {{{
	GPAA_SERVER_SIDE=/var/www/html/free
	GPAA_REACT_SIDE=~/Works/gpaa/project
	DOTFILES=~/dotfiles
	DOWNLOAD=~/Downloads
# }}}

# shortcut for jumping between directory {{{
j(){
	local jump=~/Documents
	local param=$1

	if [[ $param == "rea" ]]; then
		jump=$GPAA_REACT_SIDE       # gpaa react side
	fi ;

	if [[ $param == "ser" ]]; then
		jump=$GPAA_SERVER_SIDE      # gpaa server side
	fi ;

	if [[ $param == "dot" ]]; then
		jump=$DOTFILES              # dotfiles directory
	fi ;

	if [[ $param == "d" ]]; then
		jump=$DOWNLOAD              
	fi ;

	cd $jump ;
}
# }}}
# Initialize/start project {{{
	sapp-gpaa-react(){
		cd ~/Works/gpaa/project
		npm start &> /dev/null &
	}
# }}}
# Tmux {{{
	alias mux="tmux -2"
	# tmux configuration
	cfg-tmux(){ $EDITOR ~/.tmux.conf ;}
	mux-kill-session(){ tmux kill-session -t $1 ;}	
# }}}
# transmission {{{
	tsm(){ transmission-remote -l ;}
	tsm-add(){ transmission-remote -a $1 ;}
	tsm-info(){ transmission-remote -t "$1" -i ;}
	tsm-config(){ sudo $EDITOR /etc/transmission-daemon/settings.json ;}
	tsm-remove(){ transmission-remote -t "$1" -r ;}
	tsm-start(){ transmission-remote -t "$1" -s ;}
	tsm-stop(){ transmission-remote -t "$1" -S ;}
# }}}
# Git {{{
	# pushing all commit
	gpush-all-commit(){ 
		echo "pushing react side code"
		cd $GPAA_REACT_SIDE
		git push origin master

		echo "pushing server side"
		cd $GPAA_SERVER_SIDE
		git push origin master

		echo "pushing dotfiles"
		cd $DOTFILES
		git push origin master
	}
# }}}
# System {{{
sym-turnoff(){ sudo shutdown -h now ;}
# }}}
alias lg="ls -lah | grep -i"
# notes
notes-linux() { $EDITOR ~/MEGA/Notes\ and\ Ebooks/Linux/notes ;} # linux related notes

# configure ranger {{{
	cfg-ranger-rifle(){ $EDITOR ~/.config/ranger/rifle.conf ;}
# }}}

# reload configuration
alias rld-zshrc="source ~/.zshrc"
# download 720p youtube video
alias youdl-720p="youtube-dl -f 22"

# update
alias updt-system="sudo apt-get update"
alias upgd-system="sudo apt-get upgrade"

# install
alias instl="sudo aptitude install"

# Apt-get stuff {{{
alias aget-search="apt-cache search"
alias aget-update="sudo apt-get update"
alias aget-upgrade="sudo apt-get upgrade"
alias aget-key="sudo apt-get key"
alias aget-install="sudo apt-get install"
alias aget-remove="sudo apt-get remove"
#}}}
# MongoDB {{{
alias mongod="/home/adit/software_tarball/mongodb/bin/mongod --dbpath /home/adit/software_tarball/mongodata"
alias mongo="/home/adit/software_tarball/mongodb/bin/mongo"
# }}}

# configuration 
cfg-aliases() { $EDITOR ~/.aliases_winanda ;}
cfg-zshrc() { $EDITOR ~/.zshrc ;}
cfg-vimrc() { $EDITOR ~/.vimrc ;}

# find alternative apps if it is installed on your system
find_alt() { for i;do which "$i" >/dev/null && { echo "$i"; return 0;};done;return 1; }
#
# # set the default program
# # the first program in the array will be chosen as the default
export OPENER=$(find_alt xdg-open exo-open gnome-open )
export BROWSER=$(find_alt chromium chromium-browser google-chrome firefox $OPENER )
export BROWSERCLI=$(find_alt w3m links2 links lynx elinks $OPENER )
export COMICER=$(find_alt mcomix comix zathura $OPENER )
export EBOOKER=$(find_alt ebook-viewer $OPENER )
export EDITOR=$(find_alt vim emacs nano leafpad gedit pluma $OPENER )
export FILEMANAGER=$(find_alt pcmanfm thunar nautilus dolphin spacefm enlightenment_filemanager $OPENER )
export MUSICER=$(find_alt mplayer mpg123 cvlc $OPENER )
export PAGER=$(find_alt less more most)
export PKMGR=$(find_alt yaourt pacman aptitude apt-get yum zypper emerge)
export PLAYER=$(find_alt mplayer cvlc $OPENER )
export READER=$(find_alt mupdf zathura evince $OPENER )
export ROOTER=$(find_alt gksudo kdesudo )
export IMAGEVIEWER=$(find_alt feh display eog $OPENER )

export LESS_TERMCAP_mb=$'\E[01;31m'             # begin blinking
export LESS_TERMCAP_md=$'\E[01;31m'             # begin bold
export LESS_TERMCAP_me=$'\E[0m'                 # end mode
export LESS_TERMCAP_se=$'\E[0m'                 # end standout-mode                 
export LESS_TERMCAP_so=$'\E[01;44;33m'          # begin standout-mode - info box 
export LESS_TERMCAP_ue=$'\E[0m'                 # end underline
export LESS_TERMCAP_us=$'\E[01;32m'             # begin underline



